# microservice specific routes

# Business
GET         /individuals/business/details/:nino/list                                               controllers.BusinessDetailsController.getBusinesses(nino: String)
GET         /individuals/business/details/:nino/:businessId                                        controllers.BusinessDetailsController.getBusiness(nino: String, businessId: String)
GET         /individuals/business/journey-states/:nino/:taxYear                                    controllers.BusinessDetailsController.getBusinessJourneyStates(nino: String, taxYear: Int)

# Journey State
GET         /completed-section/:nino/:taxYear                                                      controllers.JourneyStateController.getJourneyStateSeq(nino: String, taxYear: Int)
GET         /completed-section/:businessId/:journey/:taxYear                                       controllers.JourneyStateController.getJourneyState(businessId: String, journey: String, taxYear: Int)
PUT         /completed-section/:businessId/:journey/:taxYear/:completed                            controllers.JourneyStateController.putJourneyState(businessId: String, journey: String, taxYear: Int, completed: Boolean)

# Journey Answers
GET         /:taxYear/:businessId/:journey                                                         controllers.JourneyAnswersController.getAnswers(taxYear: TaxYear, businessId: BusinessId, journey: JourneyName)
POST        /:taxYear/:businessId/:journey                                                         controllers.JourneyAnswersController.saveAnswers(taxYear: TaxYear, businessId: BusinessId, journey: JourneyName)

# Expenses
# Goods to sell or use
POST       /send-journey-answers/expenses-goods-to-sell-or-use/:taxYear/:businessId/:nino               controllers.journeyAnswers.expenses.goodsToSellOrUse.GoodsToSellOrUseController.handleRequest(taxYear: TaxYear, businessId: BusinessId, nino: Nino)
